name: GIT CLI Collector (Branch)
run-name: ${{ github.actor }} is Collecting a Branch! ðŸš€
on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:

jobs:
  Date:
    runs-on: ubuntu-24.04
    outputs:
      Date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: DATE
        run: |
          echo "Setting Date"
          echo "DATE=$(date '+%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo -e "\nWrote to file:\n$GITHUB_OUTPUT\n"
          echo "Values:"
          cat $GITHUB_OUTPUT

  Collect-RPMs:
    needs: [Date]
    runs-on: ubuntu-24.04
    strategy:
        max-parallel: 1
        matrix:
            os: [8, 9]
            repo: [endpoint]
    container:
      image: docker.io/redhat/ubi${{ matrix.os }}
      env:
        GH_TOKEN: ${{ github.token }}
      volumes:
        - /mnt:/mnt
      # credentials:
      #   username: ${{ secrets.REGISTRY_USER }}
      #   password: ${{ secrets.REGISTRY_TOKEN }}
      # ports:
      #   - 80

    steps:
      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)
      
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Show Files
        run: |
          chmod a+x reposync.sh 
          ls -Alht

      - name: List disks
        run: df -h /mnt

      - name: Register system and install packages
        run: |
          rm /etc/rhsm-host
          subscription-manager register \
            --username '${{ secrets.RHDN_USER }}' \
            --password '${{ secrets.RHDN_PASS }}'
          dnf install -y dnf-plugins-core yum-utils mkisofs isomd5sum tree procps-ng pigz
          echo "Registering EndPoint Repo"
          dnf install -y https://packages.endpointdev.com/rhel/${{ matrix.os }}/main/x86_64/endpoint-repo.noarch.rpm
          dnf repolist

      - name: Sync Repo
        run: |
          reposync --download-metadata -m \
            --repo=${{ matrix.repo }} \
            -p /mnt/

      - name: Unregister system
        run: subscription-manager unregister

      - name: Show Consumption
        run: |
          echo -e "Disk Usage:\n$(du -chs /mnt/${{ env.REPO }})\n"
          echo -e "Disk Space:\n$(df -h /mnt/${{ env.REPO }})"

      - name: Directory Contents
        run: |
          echo -e "Directory Contents\n$(ls -lAhsS /mnt/*)"
          echo -e "\n\nDirectory Size\n$(du -hd1 /mnt/*| awk 'NR==2 {print $4}')"
  
      - name: TARchive Output
        run: |
          tar -cv -Ipigz --remove-files -C /mnt/ \
            -f /mnt/${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz \
            ${{ matrix.repo }} \
            | tee /mnt/${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz.txt

      - name: Generate Hash
        run: |
          sha256sum -b /mnt/${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz  | tee \
            /mnt/${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz.sha

      - name: List files 
        run: ls -1sSh /mnt/${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz*

      - name: Upload TARchive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz
          path: /mnt/${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz
          if-no-files-found: error

      - name: Upload TARchive SHA
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz.sha
          path: /mnt/${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz.sha
          if-no-files-found: error

      - name: Upload TARchive ToC
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz.txt
          path: /mnt/${{ vars.COLLECTOR }}-${{ matrix.repo }}-${{ matrix.os }}-RPMS-${{ needs.Date.outputs.Date }}.tgz.txt
          if-no-files-found: error

  Code:
    needs: [Date]
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: true

      - name: Setup Git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"

      - name: Update Submodules if needed
        shell: bash
        run: git submodule update --init --recursive --remote

      - name: Bundle Repo1 code base for ${{ vars.COLLECTOR }}
        run: |
          git bundle create --progress ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle --all
          ls -Alht *

      - name: Generate Hash
        run: |
          sha256sum -b ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle | tee \
            ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle.sha

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle

      - name: Upload bundle hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle.sha
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle.sha
          if-no-files-found: error

  MakeISO:
    runs-on: ubuntu-24.04
    needs: [Date, Code, Collect-RPMs]
    permissions:
      contents: write
      pull-requests: read
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install mkisofs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mkisofs isomd5sum wget

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ISO

      - name: Download Windows GIT Binaries
        run: |
          export REPO="git-for-windows/git"
          export DEST="ISO/binaries"
          echo -e "\nWorking with github repo $REPO"
          echo -e "Listing releases"
          gh release list -R $REPO
          echo -e "\nDownloading binaries"
          mkdir -p $DEST
          echo -e "Downloading Latest to $DEST"
          gh release download \
            -p "Git*bit.exe" -p "Port*.exe" \
            -D $DEST -R $REPO
          echo -e "Downloaded to $DEST\n"
          echo -e "Downloaded Files:\n$(ls -1sSh $DEST)"

      - name: Copy Markdowns to ISO
        run: cp -v *.md ISO/

      - name: Show Artifacts
        run: ls -1sSh ISO/*

      - name: Generate Artifact Hash File
        run: |
          cd ISO
          sha256sum -b * | tee \
            ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.sha

      - name: Upload Artifact Hash File
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.sha
          path: ISO/${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.sha

      - name: Make ISO
        run: |
          mkisofs -r -v -l \
            -V '${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}' \
            -A '${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}' \
            -o ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso \
            ISO

      - name: Implant MD5 sum into iso
        run: implantisomd5 ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso

      - name: Generate ISO Hash
        run: |
          sha256sum -b ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso | tee \
            ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha

      - name: Show ISO & Hash
        run: ls -Alht *.iso*

      - name: Upload ISO
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso
          if-no-files-found: error

      - name: Upload ISO Hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha

  Release:
    runs-on: ubuntu-24.04
    needs: [Date, MakeISO]
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -Alht ${{ vars.COLLECTOR }}-*.*

      # Section to create a tag and release
  Sharepoint:
    runs-on: ubuntu-24.04
    needs: [Date, MakeISO]
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -Alht ${{ vars.COLLECTOR }}-*.*

      # Send Files to Sharepoint
